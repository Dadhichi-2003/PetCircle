import React from 'react'
import { FaHeart } from "react-icons/fa";
import { RiUserCommunityFill } from "react-icons/ri";
import { IoPawSharp } from "react-icons/io5";
import { FaHome } from "react-icons/fa";
import { LuMessagesSquare } from "react-icons/lu";
import { FaCalendarDays } from "react-icons/fa6";
import { TbSquareRoundedNumber1Filled, TbSquareRoundedNumber2Filled, TbSquareRoundedNumber3Filled, TbSquareRoundedNumber4Filled, TbSquareRoundedNumber5Filled } from 'react-icons/tb';

const Features = () => {
  return (
    <>
      <section className="p-10 font-roboto">
        <h2 className="text-center text-2xl font-bold mb-6">Why Join PetCircle?</h2>
        <div className="grid md:grid-cols-3 gap-6 ">
          <div className="p-6 border  rounded-3xl s shadow-lg space-y-3">
            <FaHeart className='size-10 ' />
            <p className="font-bold text-xl"> Find Your Perfect Match</p>
            <p>Connect with pets that match your lifestyle  and Preferences through our smart watching system.</p>
          </div>
          <div className="p-6 border  rounded-3xl s shadow-lg space-y-3">
            <RiUserCommunityFill className='size-10 ' />
            <p className="font-bold text-xl">Join the Community</p>
            <p>Share experiences and get advice and get expert advice.</p>
          </div>
          <div className="p-6 border  rounded-3xl s shadow-lg space-y-3">
            <IoPawSharp className='size-10 ' />
            <p className="font-bold text-xl">Safe Adoption Process</p>
            <p>Our verified adoption process ensures both pets and adopters find their perfect match.</p>
          </div>
        </div>
      </section>
      <section className=' md:flex justify-around  font-roboto'>
        <div className='ml-12'>
          <p className="font-bold text-xl my-5">How It works</p>
          <div className='flex mb-4'>
          <TbSquareRoundedNumber1Filled  className='size-12  mr-2 fill-primary'/>
            {/* <span className='How_works'>1</span> */}
            <div>
              <span className='font-bold text-lg'>Create your profile</span>
              <p className=''>Tell us about your self and what you'r looking for in pet.</p>
            </div>
          </div>
          <div className='flex mb-4'>
          <TbSquareRoundedNumber2Filled className='size-12  mr-2 fill-primary' />
            {/* <span className='size-8'></span> */}
            <div>
              <span className='font-bold text-lg'>Browse Available Pets</span>
              <p className=''>Explore our database of pets looking for their forever homes</p>
            </div>
          </div>
          <div className='flex mb-4'>
          <TbSquareRoundedNumber3Filled className='size-12  mr-2 fill-primary' />
            {/* <span className='How_works'>3</span> */}
            <div>
              <span className='font-bold text-lg'>Connect & Adopt</span>
              <p className=''>Schedule meets and complete the adoption process safely.</p>
            </div>
          </div>
          <div className='flex mb-4'>
          <TbSquareRoundedNumber4Filled className='size-12 mr-2 fill-primary' />
            {/* <span className='How_works'></span> */}
            <div>
              <span className='font-bold text-lg'>Connect with other Pet-owners</span>
              <p className=''>Communicate with other pet-owners and gain knowledge.</p>
            </div>
          </div>  <div className='flex mb-4'>
          <TbSquareRoundedNumber5Filled className='size-12  mr-2 fill-primary' />
            {/* <span className='How_works'>5</span> */}
            <div>
              <span className='font-bold text-lg'>Get Advice from Experts & Trainers</span>
              <p className=''>Connect with animal experts and give healthy life to your pet.</p>
            </div>
          </div>

        </div>
        <div className='ml-12 md:flex flex-col mt-9 mr-12' >
          <p className="font-bold text-xl mb-6 ">Key Features</p>
          <div className='space-y-1 mb-10'>
            <FaHome className='size-8' />
            <p className='font-bold '>Pet Adoption</p>
            <p>Find your perfect companion from our verified network of shelters and rescues</p>
          </div>
          <div className='space-y-1 mb-8'>
            <LuMessagesSquare className='size-8' />
            <p className='font-bold '>Connect with others</p>
            <p>Interact with other pet owners and found the new connections .</p>
          </div>
          <div className='space-y-1 mb-8'>
            <FaCalendarDays  className='size-8' />
            <p className='font-bold '>Meetings</p>
            <p>Schedule safe meet-and-greers with potential pets and their current caregivers</p>
          </div>
        </div>
      </section>
      <section className="py-16  bg-gray-50">
      <div className="max-w-6xl mx-auto text-center px-6">
        <h2 className="text-3xl font-bold text-gray-900 mb-8">Our Impact</h2>

        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
          {/* Impact Card 1 */}
          <div className="bg-secondary p-6 rounded-lg shadow-md text-center">
            <h3 className="text-4xl font-bold text-light">10K+</h3>
            <p className="text-light mt-2">Happy Users</p>
          </div>

          {/* Impact Card 2 */}
          <div className="bg-secondary p-6 rounded-lg shadow-md text-center">
            <h3 className="text-4xl font-bold text-light">5K+</h3>
            <p className="text-light mt-2">Successful Adoptions</p>
          </div>

          {/* Impact Card 3 */}
          <div className="bg-secondary p-6 rounded-lg shadow-md text-center">
            <h3 className="text-4xl font-bold text-light">3K+</h3>
            <p className=" text-light mt-2">Pet Breeds</p>
          </div>
        </div>
      </div>
    </section>
    </>
  )
}

export default Features



//footer

import React from 'react'
import { FaInstagram, FaFacebookF, FaTwitter } from "react-icons/fa";

const Footer = () => {
  return (
    <footer className="bg-secondary text-white py-10">
    <div className="max-w-6xl mx-auto px-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-8">
      {/* About Section */}
      <div className="text-center md:text-left">
        <h3 className="font-semibold text-lg mb-3">About</h3>
        <ul className="space-y-2 text-gray-400">
          <li><a href="#" className="hover:text-white">Our Story</a></li>
          <li><a href="#" className="hover:text-white">Mission</a></li>
          <li><a href="#" className="hover:text-white">Team</a></li>
        </ul>
      </div>

      {/* Contact Section */}
      <div className="text-center md:text-left">
        <h3 className="font-semibold text-lg mb-3">Contact</h3>
        <ul className="space-y-2 text-gray-400">
          <li><a href="#" className="hover:text-white">Support</a></li>
          <li><a href="#" className="hover:text-white">Help Center</a></li>
          <li><a href="#" className="hover:text-white">Partners</a></li>
        </ul>
        <div className="flex justify-center md:justify-start space-x-4 mt-4">
          <a href="#" className="text-gray-400 hover:text-white"><FaInstagram size={20} /></a>
          <a href="#" className="text-gray-400 hover:text-white"><FaFacebookF size={20} /></a>
          <a href="#" className="text-gray-400 hover:text-white"><FaTwitter size={20} /></a>
        </div>
      </div>

      {/* Legal Section */}
      <div className="text-center md:text-left">
        <h3 className="font-semibold text-lg mb-3">Legal</h3>
        <ul className="space-y-2 text-gray-400">
          <li><a href="#" className="hover:text-white">Privacy Policy</a></li>
          <li><a href="#" className="hover:text-white">Terms of Service</a></li>
          <li><a href="#" className="hover:text-white">Cookie Policy</a></li>
        </ul>
      </div>

      {/* Newsletter Section */}
      <div className="text-center md:text-left">
        <h3 className="font-semibold text-lg mb-3">Newsletter</h3>
        <p className="text-gray-400 mb-3">Stay updated with pet adoption news and tips.</p>
        <div className="flex flex-col sm:flex-row">
          <input
            type="email"
            placeholder="Enter your email"
            className="w-full px-3 py-2 rounded-lg text-black mb-3 sm:mb-0 sm:rounded-l-lg bg-light"
          />
          <button className="bg-semilight px-4 py-2 rounded-lg sm:rounded-l-none">
            Subscribe
          </button>
        </div>
      </div>
    </div>

    {/* Bottom Section */}
    <div className="text-center text-gray-500 mt-8 text-sm">
      Â© 2025 PetCircle. All rights reserved.
    </div>
  </footer>
  )
}

export default Footer


//hero section

import React from 'react'
import Banner from "../../assets/HeroBanner.jpg"
import { Link } from 'react-router-dom'


const HeroSection = () => {
  return (
<section class="bg-primary h-150 flex flex-col justify-center items-center  dark:bg-gray-900">
    <div class="grid  max-w-screen-xl px-4 py-8 mx-auto lg:gap-8 xl:gap-0 lg:py-16 lg:grid-cols-12">
        <div class="  lg:col-span-7">
            <h1 class="max-w-2xl mb-4 text-4xl font-extrabold tracking-tight leading-none md:text-5xl xl:text-6xl dark:text-white">Find Your Perfect Pet Companion!</h1>
            <p class="max-w-2xl mb-6 font-light text-gray-400 lg:mb-8 md:text-lg lg:text-xl dark:text-gray-400">Adopt, care, and connect with pet lovers worldwide. Your furry friend is waiting for you!</p>
            <Link to="signup" class="inline-flex items-center justify-center px-5 py-3 mr-3 text-base font-medium text-center text-white bg-accent rounded-lg bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:focus:ring-primary-900">
                Get started
                <svg class="w-5 h-5 ml-2 -mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
            </Link  >
           
        </div>
        
        <div class=" mt-4 h-100 w-300 lg:mt-0 lg:col-span-5 lg:flex shadow-xl">
            <img src={Banner} alt="mockup"/>
        </div>                
    </div>
</section>
  )
}

export default HeroSection

import React from "react";
import { useForm } from "react-hook-form";
import { Link, useNavigate } from "react-router-dom";
import Navbar from "./Navbar";
import { LogIn } from "lucide-react";
import { toast, ToastContainer, Zoom } from "react-toastify";
import axios from "axios";


const Login = () => {
  const { register, handleSubmit, formState: { errors } } = useForm();
  const navigate = useNavigate();

  const submitHandler = async (data) => {
    
    try{
      const login = await axios.post("/login", data,{ withCredentials: true })
    if (login.status == 200) {
      toast.success('login succesfull !', {
        position: "top-center",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: false,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "dark",
        transition: Zoom,
      
      });
      console.log(login.data)

      localStorage.setItem("id",login.data.data._id);
      
      

      if(login.data.data.role ==="User"){
        setTimeout(()=>{
          navigate('/main')
        },3000)
  
      }
      
      
    }
    
  }
    catch(error)
    {
        if(error.response && error.response.status === 404 ){
          toast.error('Invalid credentials,try again !', {
            position: "top-center",
            autoClose: 5000,
            hideProgressBar: false,
            closeOnClick: false,
            pauseOnHover: true,
            draggable: true,
            progress: undefined,
            theme: "dark",
            transition: Zoom,
          });

        }
    }

    

  };

  const validationSchema = {
    emailValidator: {
      required: { value: true, message: "*Email Field is required" },
      pattern: {
        value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,
        message: "Invalid Email Address"
      }
    },
    passwordValidator: {
      required: { value: true, message: "*Password is required" }
    }
  };

  return (
    <>
     
      <ToastContainer
        position="top-center"
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick={false}
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="dark"
        transition={Zoom}
      />
      <ToastContainer
        position="top-center"
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick={false}
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="dark"
        transition={Zoom}
      />
      <div className="flex justify-center items-center min-h-screen bg-gray-100">
        <div className="w-full max-w-md bg-white p-8 rounded-lg shadow-2xl">
          <h2 className="text-2xl font-bold text-gray-900 text-center mb-6">Login</h2>

          <form onSubmit={handleSubmit(submitHandler)} className="space-y-4">
            {/* Email Field */}
            <div>
              <label className="block text-gray-700 font-medium">Email</label>
              <input
                type="email"
                className="w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-gray-500"
                {...register("email", validationSchema.emailValidator)}
              />
              {errors.email && <p className="text-red-500 text-sm">{errors.email.message}</p>}
            </div>

            {/* Password Field */}
            <div>
              <label className="block text-gray-700 font-medium">Password</label>
              <input
                type="password"
                className="w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-gray-500"
                {...register("password", validationSchema.passwordValidator)}
              />
              {errors.password && <p className="text-red-500 text-sm">{errors.password.message}</p>}
            </div>

            {/* Login Button */}
            <button type="submit" className="w-full bg-gray-900 text-white py-2 rounded hover:bg-gray-700 transition">
              Login
            </button>
          </form>

          {/* Signup Redirect */}
          <p className="text-center text-gray-600 mt-4">
            Don't have an account? <Link to="/signup" className="text-blue-600 hover:underline">Signup</Link>
          </p>
        </div>
      </div>
    </>
  );
};

export default Login;

//Navbar


import React, { useState } from 'react'
import logo from "../../assets/logo2.png"
import { Link } from 'react-router-dom'


const Navbar = () => {

  return (
    <nav className="flex items-center text-center p-2 shadow-md bg-gray-300 justify-between font-roboto">
      <div className="flex items-center justify-items-start text-center text-xl font-bold"><Link to="/" ><img className='  size-22 shrink-0' src={logo} /></Link><span className='text-primary'>  PetCircle</span></div>
      <div className="flex items-center justify-center space-x-5 mr-5">

        <button className="text-primary hover:text-secondary"><Link to="/login">Login</Link></button>
        <button className="bg-primary text-light px-4 py-2 rounded hover:bg-secondary ease-in"><Link to="/signup">Sign Up</Link></button>
      </div>
    

    </nav>
  )
}

export default Navbar

//signup

import React, { useState } from "react";
import { useForm } from "react-hook-form";
import { Link } from "react-router-dom";
import Navbar from "./Navbar";
import axios from "axios"
import { Bounce, toast, ToastContainer } from "react-toastify"
import { useNavigate } from "react-router-dom";

const SignUp = () => {
  const [role, setRole] = useState("User"); // Default role is User
  const navigate = useNavigate();

  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm();

  const validationSchema = {
    userNameValidator: { required: "Username is required", minLength: { value: 3, message: "At least 3 characters" } },
    emailValidator: {
      required: "Email is required",
      pattern: { value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/, message: "Invalid Email Address" },
    },
    mobileNumValidator: {
      required: "Contact number is required",
      pattern: { value: /^[6-9]{1}[0-9]{9}$/, message: "Invalid Contact Number" },
    },
    passwordValidator: { required: "Password is required", minLength: { value: 6, message: "At least 6 characters" } },
    confirmPasswordValidator: {
      required: "Confirm password is required",
      validate: (value) => value === watch("password") || "Passwords do not match",
    },
  };

  const submitHandler = async(data) => {
    console.log(data)
    try{
     
      const user = await axios.post("/signup",data)
      console.log(user.data)

    if(user.status===201){
    
      toast.success('User Registered!', {
        position: "top-center",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: false,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "dark",
        transition: Bounce,
        });
      
        setTimeout(()=>{
          navigate('/login')
        },3000)
      
    }
    }catch(err){
      if(err.status===500){
        toast.error('email or username already exist', {
          position: "top-center",
          autoClose: 5000,
          hideProgressBar: false,
          closeOnClick: false,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "dark",
          transition: Bounce,
          });
      }
      }
    }

  

  return (
    <>
      
      <ToastContainer
        position="top-center"
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick={false}
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="dark"
        transition={Bounce}
      />
      <ToastContainer
        position="top-center"
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick={false}
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="dark"
        transition={Bounce}
      />
      <div className="flex items-center justify-center min-h-screen bg-gray-100 ">
        <div className="w-full max-w-lg bg-white p-6 rounded-lg shadow-2xl">
          <h2 className="text-center text-2xl font-semibold mb-4">Sign Up</h2>
          <form onSubmit={handleSubmit(submitHandler)}>
            {/* Role Selection */}
            <div className="mb-4">
              <label className="block font-medium">Sign up as:</label>
              <select
                {...register("role")}
                onChange={(e) => setRole(e.target.value)}
                className="block w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-gray-500"
              >
                <option value="User">User</option>
                <option value="Expert">Expert or Trainer</option>
              </select>
            </div>

            {/* Common Fields (Compact Layout) */}
            <div className="grid grid-cols-2 gap-4">
              <div>
                <label className="block font-medium">Username</label>
                <input
                  type="text"
                  className="w-full p-2 border border-gray-300 rounded-lg"
                  {...register("username", validationSchema.userNameValidator)}
                />
                <p className="text-red-500 text-sm">{errors.username?.message}</p>
              </div>

              <div>
                <label className="block font-medium">Email</label>
                <input
                  type="email"
                  className="w-full p-2 border border-gray-300 rounded-lg"
                  {...register("email", validationSchema.emailValidator)}
                />
                <p className="text-red-500 text-sm">{errors.email?.message}</p>
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4 mt-4">
             

              <div>
                <label className="block font-medium">Password</label>
                <input
                  type="password"
                  className="w-full p-2 border border-gray-300 rounded-lg"
                  {...register("password", validationSchema.passwordValidator)}
                />
                <p className="text-red-500 text-sm">{errors.password?.message}</p>
              </div>

              <div className="">
              <label className="block font-medium">Confirm Password</label>
              <input
                type="password"
                className="w-full p-2 border border-gray-300 rounded-lg"
                {...register("confirmPassword", validationSchema.confirmPasswordValidator)}
              />
              <p className="text-red-500 text-sm">{errors.confirmPassword?.message}</p>
            </div>
            </div>

           

            {/* Expert Fields (Appears Only If Expert is Selected) */}
            {role === "Expert" && (
              <div className="mt-4 bg-gray-50 p-4 rounded-lg border border-gray-300">
                <h3 className="text-lg font-semibold text-gray-800 mb-2">Expert Details</h3>

                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <label className="block font-medium">Expertise Area</label>
                    <input
                      type="text"
                      className="w-full p-2 border border-gray-300 rounded-lg"
                      {...register("expertise", { required: "Expertise is required" })}
                    />
                    <p className="text-red-500 text-sm">{errors.expertise?.message}</p>
                  </div>

                  <div>
                    <label className="block font-medium">Years of Experience</label>
                    <input
                      type="number"
                      className="w-full p-2 border border-gray-300 rounded-lg"
                      {...register("experience", { required: "Experience is required" })}
                    />
                    <p className="text-red-500 text-sm">{errors.experience?.message}</p>
                  </div>
                </div>
                <div>
                <label className="block font-medium">Mobile Number</label>
                <input
                  type="text"
                  className="w-full p-2 border border-gray-300 rounded-lg"
                  {...register("contact", validationSchema.mobileNumValidator)}
                />
                <p className="text-red-500 text-sm">{errors.mobile?.message}</p>
              </div>

                <div className="mt-4">
                  <label className="block font-medium">Services Offered</label>
                  <select
                    multiple
                    className="block w-full p-2 border border-gray-300 rounded"
                    {...register("services")}
                  >
                    <option value="Training">Training</option>
                    <option value="Health Consultation">Health Consultation</option>
                    <option value="Nutrition Advice">Nutrition Advice</option>
                  </select>
                </div>

                <div className="mt-4">
                  <label className="block font-medium">Short Bio</label>
                  <textarea
                    className="w-full p-2 border border-gray-300 rounded-lg"
                    {...register("bio", { required: "Bio is required" })}
                  />
                  <p className="text-red-500 text-sm">{errors.bio?.message}</p>
                </div>
              </div>
            )}

            {/* Submit Button */}
            <button
              type="submit"
              className="w-full mt-4 bg-gray-800 text-white p-2 rounded-lg hover:bg-gray-700 transition"
            >
              Sign Up
            </button>
          </form>

          <p className="text-center text-gray-600 mt-4">
            Already have an account?{" "}
            <Link to="/login" className="text-blue-600 hover:underline">
              Login
            </Link>
          </p>
        </div>
      </div>
    </>
  );
};

export default SignUp;



